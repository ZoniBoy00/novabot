import { SlashCommandBuilder, EmbedBuilder } from "discord.js"
import config from "../../config.js"
import { isOwner } from "../../utils/ownerUtils.js"

export const data = new SlashCommandBuilder()
  .setName("guide")
  .setDescription("Shows a comprehensive guide on how to use NovaBot")

export async function execute(interaction) {
  const isOwnerUser = isOwner(interaction.user.id)

  const mainEmbed = new EmbedBuilder()
    .setColor(config.embedColor)
    .setTitle("üìö NovaBot Complete Guide")
    .setDescription("Welcome to NovaBot! This guide will help you understand all the features and commands available.")
    .addFields(
      {
        name: "üéµ Music System",
        value: `\`/play\` - Play music from YouTube/Spotify
\`/queue\` - View the current queue
\`/skip\` - Skip the current song
\`/stop\` - Stop playback
\`/pause\` - Pause the current song
\`/resume\` - Resume paused music
\`/volume\` - Adjust volume (0-100)
\`/seek\` - Jump to specific timestamp
\`/loop\` - Toggle loop mode
\`/shuffle\` - Shuffle the queue
\`/nowplaying\` - Show current song`,
      },
      {
        name: "üõ°Ô∏è Moderation",
        value: `\`/ban\` - Ban a user
\`/kick\` - Kick a user
\`/mute\` - Timeout a user
\`/warn\` - Warn a user
\`/clear\` - Clear messages
\`/userinfo\` - View user details`,
      },
      {
        name: "üîß Utility",
        value: `\`/help\` - Show commands by category
\`/ping\` - Check bot latency
\`/server-info\` - Server information
\`/stats\` - Bot statistics
\`/embed\` - Create embedded messages
\`/guide\` - Show this guide`,
      },
      {
        name: "‚≠ê Level System",
        value: `\`/rank\` - Check your or another user's rank
\`/leaderboard\` - View the XP leaderboard
‚Ä¢ Earn XP by chatting
‚Ä¢ Level up and compete with others`,
      },
      {
        name: "üíπ Cryptocurrency",
        value: `\`/crypto\` - Check cryptocurrency prices
‚Ä¢ Real-time price data
‚Ä¢ Multiple currencies (USD/EUR/GBP)
‚Ä¢ 24h price changes`,
      },
      {
        name: "üí∞ Economy & Games",
        value: `\`/balance\` - Check your balance
\`/daily\` - Get daily rewards
\`/work\` - Work for money
\`/shop\` - View available businesses
\`/buy\` - Purchase a business
\`/businesses\` - View your business empire
\`/collect\` - Collect business income
\`/upgrade\` - Upgrade your businesses
\`/blackjack\` - Play blackjack
\`/slots\` - Try the slot machine
\`/coinflip\` - Flip a coin
\`/rob\` - Rob other users
\`/give\` - Give money to others
\`/richest\` - View wealthiest users`,
      },
    )
    .setFooter({ text: "Tip: Use /help [category] for detailed command information" })

  // Add owner commands section if the user is the owner
  if (isOwnerUser) {
    mainEmbed.addFields({
      name: "üëë Owner Commands",
      value: `\`/eval\` - Execute code
\`/restart\` - Restart the bot
\`/reload\` - Reload commands
\`/shutdown\` - Shutdown the bot
\`/maintenance\` - Toggle maintenance mode
\`/reset-user\` - Reset a user's data
\`/reset-all\` - Reset all users' data
\`/ownerhelp\` - Detailed owner help`,
    })
  }

  const featuresEmbed = new EmbedBuilder()
    .setColor(config.embedColor)
    .setTitle("üåü Features & Tips")
    .addFields(
      {
        name: "üéµ Music Features",
        value: `‚Ä¢ Supports YouTube and Spotify
‚Ä¢ Volume control and seeking
‚Ä¢ Queue management and shuffling
‚Ä¢ Loop modes (song/queue)
‚Ä¢ High-quality playback`,
      },
      {
        name: "üõ°Ô∏è Moderation Features",
        value: `‚Ä¢ Detailed logging system
‚Ä¢ Customizable timeouts
‚Ä¢ Warning system
‚Ä¢ Bulk message deletion
‚Ä¢ User tracking`,
      },
      {
        name: "‚öôÔ∏è General Features",
        value: `‚Ä¢ Slash command support
‚Ä¢ Custom embed creation
‚Ä¢ Server statistics
‚Ä¢ Real-time status updates
‚Ä¢ Automatic error handling`,
      },
      {
        name: "üí° Tips",
        value: `‚Ä¢ Use \`/help [category]\` for detailed command info
‚Ä¢ Check \`/stats\` for bot status
‚Ä¢ Moderators can use \`/embed\` for announcements
‚Ä¢ Music commands work in any voice channel
‚Ä¢ Some commands have additional options`,
      },
      {
        name: "‚≠ê Level System Features",
        value: `‚Ä¢ Automatic XP gain from chatting
‚Ä¢ Level-up notifications
‚Ä¢ XP cooldown system
‚Ä¢ Server-specific rankings
‚Ä¢ Detailed progress tracking`,
      },
      {
        name: "üíπ Crypto Features",
        value: `‚Ä¢ Real-time cryptocurrency prices
‚Ä¢ Multiple currency support
‚Ä¢ Market cap information
‚Ä¢ 24-hour price changes
‚Ä¢ Powered by CoinGecko API`,
      },
      {
        name: "üí∞ Economy Features",
        value: `‚Ä¢ Daily rewards system
‚Ä¢ Multiple ways to earn
‚Ä¢ Casino games with fair odds
‚Ä¢ Player interaction
‚Ä¢ Leaderboard system
‚Ä¢ Anti-cheat measures`,
      },
    )
    .setFooter({ text: "NovaBot ‚Ä¢ Made with ‚ù§Ô∏è" })

  const setupEmbed = new EmbedBuilder()
    .setColor(config.embedColor)
    .setTitle("üîß Setup Guide")
    .addFields(
      {
        name: "üéµ Music Setup",
        value: `1. Join a voice channel
2. Use \`/play\` with a song name or URL
3. Adjust volume with \`/volume\`
4. Manage queue with \`/queue\``,
      },
      {
        name: "üõ°Ô∏è Moderation Setup",
        value: `1. Ensure bot has proper permissions
2. Mod-logs channel will be created automatically
3. Set up moderator roles in your server
4. Test commands with low-risk actions first`,
      },
      {
        name: "üìù Permissions Needed",
        value: `‚Ä¢ Manage Messages
‚Ä¢ Kick/Ban Members
‚Ä¢ Manage Channels
‚Ä¢ Connect/Speak (for music)
‚Ä¢ View Audit Log
‚Ä¢ Send Messages/Embeds`,
      },
      {
        name: "‚ö†Ô∏è Important Notes",
        value: `‚Ä¢ Keep bot role above managed roles
‚Ä¢ Some commands require specific permissions
‚Ä¢ Mod-logs are server-specific
‚Ä¢ Music works in any voice channel
‚Ä¢ Commands use Discord's slash system`,
      },
    )
    .setFooter({ text: "Need more help? Use /help for specific commands" })

  // Send all embeds
  await interaction.reply({ embeds: [mainEmbed, featuresEmbed, setupEmbed] })
}

